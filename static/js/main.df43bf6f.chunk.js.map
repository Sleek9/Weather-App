{"version":3,"sources":["components/SearchBar.jsx","components/WeatherDetails.jsx","components/ErrorMessage.jsx","components/Loader.jsx","components/WeatherApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","handleSearch","useState","search","setSearch","onSubmit","e","preventDefault","className","type","name","id","placeholder","onChange","target","value","autoComplete","WeatherDetails","response","data","weather","sys","country","src","icon","alt","description","main","temp","feels_like","ErrorMessage","error","cod","message","Loader","WeatherApp","searchInput","setSearchInput","setResponse","setError","errorData","setErrorData","loading","setLoading","useLocation","qSearch","URLSearchParams","get","history","useHistory","useEffect","a","axios","res","push","setTimeout","getData","searchValue","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df43bf6f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = ({ handleSearch }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.value) {\r\n      setSearch(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    e.preventDefault();\r\n    handleSearch(search);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleChangeSearch} className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          name=\"ciudad\"\r\n          id=\"ciudad\"\r\n          placeholder=\"Ingresa tu ciudad\"\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <button type=\"submit\" className=\"button\">\r\n          <i className=\"fas fa-search\"></i>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./WeatherDetails.css\";\r\n\r\nconst WeatherDetails = ({ response }) => {\r\n  if (!response) return null;\r\n\r\n  let data = response.weather[0];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <p className=\"city\">\r\n        Clima de {response.name}, {response.sys.country}\r\n      </p>\r\n      <div className=\"imagen\">\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${data.icon}@4x.png`}\r\n          alt=\"\"\r\n        />\r\n        <p className=\"description\">{data.description}</p>\r\n      </div>\r\n      <div className=\"temp\">\r\n        <p className=\"tempC\">{response.main.temp}°C</p>\r\n        <p className=\"tempFeels\">Se siente como {response.main.feels_like}°C</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import React from \"react\";\r\nimport \"./ErrorMessage.css\";\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n  return (\r\n    <div className=\"error\">\r\n      <p>\r\n        Error {error.data.cod}: {error.data.message}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport WeatherDetails from \"./WeatherDetails\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst WeatherApp = () => {\r\n  const [searchInput, setSearchInput] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(false);\r\n  const [errorData, setErrorData] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let { search } = useLocation();\r\n  let query = new URLSearchParams(search);\r\n\r\n  let qSearch = query.get(\"q\");\r\n  let history = useHistory();\r\n\r\n  const handleSearch = (searchValue) => {\r\n    if (!qSearch) {\r\n      setSearchInput(qSearch);\r\n    } else {\r\n      setSearchInput(searchValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (qSearch) {\r\n      setSearchInput(qSearch);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!searchInput) return;\r\n\r\n    const getData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let res = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${searchInput}&lang=es&units=metric&appid=32af7cce19ca153549abe935840d6753`\r\n        );\r\n\r\n        setResponse(res.data);\r\n        setError(false);\r\n        history.push({ search: `?q=${searchInput}` });\r\n      } catch (error) {\r\n        setErrorData(error.response);\r\n        setError(true);\r\n\r\n        setTimeout(() => {\r\n          setError(false);\r\n        }, 5000);\r\n      }\r\n    };\r\n    getData();\r\n    setLoading(false);\r\n  }, [searchInput]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <h2>Clima Hoy</h2>\r\n        <i className=\"fas logo\">&#xf6c4;</i>\r\n      </div>\r\n      <SearchBar handleSearch={handleSearch} />\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage error={errorData} />}\r\n      {response && <WeatherDetails response={response} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;\r\n","import { BrowserRouter as Router, HashRouter, Route } from \"react-router-dom\";\r\nimport WeatherApp from \"./components/WeatherApp\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Route exact path=\"/\" component={WeatherApp} />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}